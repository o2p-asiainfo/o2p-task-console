<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
       http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       "
	default-lazy-init="true">
	
	<bean id="common-dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${o2pCommon.jdbcDriver}</value>
		</property>
		<property name="jdbcUrl">
			<value>${o2pCommon.database}</value>
		</property>
		<property name="user">
			<value>${o2pCommon.user}</value>
		</property>
		<property name="password">
			<value>${o2pCommon.password}</value>
		</property>
		<property name="maxPoolSize">
			<value>${o2pCommon.maxIdle}</value>
		</property>
		<property name="minPoolSize">
			<value>${o2pCommon.minIdle}</value>
		</property>
		<property name="initialPoolSize">
			<value>${o2pCommon.initialSize}</value>
		</property>
		<property name="acquireRetryDelay">
			<value>${o2pCommon.maxWait}</value>
		</property>
		<property name="breakAfterAcquireFailure">
			<value>${o2pCommon.breakAfterAcquireFailure}</value>
		</property>
		<property name="testConnectionOnCheckout">
			<value>${o2pCommon.testConnectionOnCheckout}</value>
		</property>
		<property name="testConnectionOnCheckin">
			<value>${o2pCommon.testConnectionOnCheckin}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${o2pCommon.idleConnectionTestPeriod}</value>
		</property>
		<property name="acquireRetryAttempts">
			<value>${o2pCommon.acquireRetryAttempts}</value>
		</property>
	</bean>
	<!-- SSO datasource -->
	<bean id="eaapSmDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${sm_db_url}</value>
		</property>
		<property name="user">
			<value>${sm_db_username}</value>
		</property>
		<property name="password">
			<value>${sm_db_password}</value>
		</property>
		<property name="minPoolSize">
			<value>1</value>
		</property>
		<property name="maxPoolSize">
			<value>${db_maxActive}</value>
		</property>
		<property name="maxIdleTime">
			<value>1800</value>
		</property>
		<property name="acquireIncrement">
			<value>2</value>
		</property>
		<property name="maxStatements">
			<value>0</value>
		</property>
		<property name="initialPoolSize">
			<value>${o2pCommon.initialSize}</value>
		</property>
		<property name="testConnectionOnCheckout">
			<value>${o2pCommon.testConnectionOnCheckout}</value>
		</property>
		<property name="testConnectionOnCheckin">
			<value>${o2pCommon.testConnectionOnCheckin}</value>
		</property>
		<property name="breakAfterAcquireFailure">
			<value>${o2pCommon.breakAfterAcquireFailure}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${o2pCommon.idleConnectionTestPeriod}</value>
		</property>
		<property name="acquireRetryAttempts">
			<value>${o2pCommon.acquireRetryAttempts}</value>
		</property>
		<property name="acquireRetryDelay">
			<value>${o2pCommon.maxWait}</value>
		</property>
	</bean>
	<!-- DEP datasource -->
	<bean id="eaapDepDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close">
		<property name="driverClass">
			<value>${driverClassName}</value>
		</property>
		<property name="jdbcUrl">
			<value>${dep_db_url}</value>
		</property>
		<property name="user">
			<value>${dep_db_username}</value>
		</property>
		<property name="password">
			<value>${dep_db_password}</value>
		</property>
		<property name="minPoolSize">
			<value>1</value>
		</property>
		<property name="maxPoolSize">
			<value>${db_maxActive}</value>
		</property>
		<property name="maxIdleTime">
			<value>1800</value>
		</property>
		<property name="acquireIncrement">
			<value>2</value>
		</property>
		<property name="maxStatements">
			<value>0</value>
		</property>
		<property name="initialPoolSize">
			<value>${o2pCommon.initialSize}</value>
		</property>
		<property name="testConnectionOnCheckout">
			<value>${o2pCommon.testConnectionOnCheckout}</value>
		</property>
		<property name="testConnectionOnCheckin">
			<value>${o2pCommon.testConnectionOnCheckin}</value>
		</property>
		<property name="breakAfterAcquireFailure">
			<value>${o2pCommon.breakAfterAcquireFailure}</value>
		</property>
		<property name="idleConnectionTestPeriod">
			<value>${o2pCommon.idleConnectionTestPeriod}</value>
		</property>
		<property name="acquireRetryAttempts">
			<value>${o2pCommon.acquireRetryAttempts}</value>
		</property>
		<property name="acquireRetryDelay">
			<value>${o2pCommon.maxWait}</value>
		</property>
	</bean>

	<bean id="taskSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="common-dataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:ibatis/model/taskconsole-sqlmap.xml
				</value>
			</list>
		</property>
		<property name="plugins">
			<array>
				<ref bean="pagePlugin"/>
			</array>
		</property>
		<property name="databaseIdProvider" ref="databaseIdProvider"></property>
	</bean>
	
	<bean id="databaseIdProvider" class="org.apache.ibatis.mapping.VendorDatabaseIdProvider">
		<property name="properties" ref="vendorProperties"></property>
	</bean>
	
	<bean id="vendorProperties" class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	    <property name="properties">
	      <props>
	        <prop key="Oracle">oracle</prop>
	        <prop key="MySQL">mysql</prop>
	        <prop key="HSQL Database Engine">hsqldb</prop>
	      </props>
	    </property>
	 </bean>
	
	<bean id="pagePlugin" class="com.asiainfo.integration.o2p.task.interceptor.PageInterceptor">
		<property name="dialect" value="${databaseType}"></property>
		<property name="pageSqlId" value=".*(Page|PAGE)$"></property>
	</bean>
	
	<bean id="DEPSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="eaapDepDataSource" />
		<property name="mapperLocations">
			<list>
				<value>classpath:ibatis/model/exceptionDealInfo-sqlmap.xml
				</value>
			</list>
		</property>
		<property name="plugins">
			<array>
				<ref bean="pagePlugin"/>
			</array>
		</property>
	</bean>

	<!-- 配置扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.asiainfo.integration.o2p.task.dao.Mapper" />
		<property name="sqlSessionFactoryBeanName" value="DEPSqlSessionFactory" />
	</bean>

	<!-- 配置Spring的事务管理器 -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="common-dataSource" />
	</bean>

	<!-- 拦截器方式配置事物 -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="append*" propagation="REQUIRED" />
			<tx:method name="insert*" propagation="REQUIRED" />
			<tx:method name="save*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<tx:method name="modify*" propagation="REQUIRED" />
			<tx:method name="edit*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="remove*" propagation="REQUIRED" />
			<tx:method name="repair" propagation="REQUIRED" />
			<tx:method name="delAndRepair" propagation="REQUIRED" />
			<tx:method name="get*" propagation="SUPPORTS" />
			<tx:method name="find*" propagation="SUPPORTS" />
			<tx:method name="load*" propagation="SUPPORTS" />
			<tx:method name="search*" propagation="SUPPORTS" />
			<tx:method name="datagrid*" propagation="SUPPORTS" />
			<tx:method name="*" propagation="SUPPORTS" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="transactionPointcut"
			expression="execution(* com.asiainfo.integration.o2p.task.smo.impl..*Impl.*(..))" />
		<aop:advisor pointcut-ref="transactionPointcut"
			advice-ref="transactionAdvice" />
	</aop:config>

	<bean id="taskSqlSession" class="org.mybatis.spring.SqlSessionTemplate" scope="prototype">
		<constructor-arg index="0" ref="taskSqlSessionFactory" />
	</bean>
	
	<bean id="taskJobDAO" class="com.asiainfo.integration.o2p.task.dao.impl.TaskJobDAOImpl">
		<property name="sqlSessionTemplate"><ref bean="taskSqlSession"/></property>
	</bean>
	
	<bean id="springContextUtil" class="com.ailk.eaap.op2.util.SpringContextUtil" lazy-init="false"/>
</beans>